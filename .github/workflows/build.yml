
name: Build Electron App

permissions: write-all

on:
  push

jobs:
  upload-alpha:
    name: Upload alpha
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download alpha
        uses: actions/download-artifact@v3
        with: 
          name: alpha
          path: alpha
      - name: upload alpha
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: alpha
          commit-message: update alpha
          branch: alpha-binary
          force: true

  release:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Check out git repository
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
          cache-dependency-path: HKMM-UI/package-lock.json
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7
      - name: Build Game Inject
        run: |
          cd gameinject
          dotnet build -c=Release
      - name: Build
        run: |
          cd HKMM-UI
          npm ci
          npm run build:metadata
          npm run build:offlineModLinks
          npm run electron:build
          npm run build:update
          copy ./dist_electron/update.zip ./dist_electron/update-v3.zip
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            HKMM-UI/dist_electron/*.exe
            HKMM-UI/dist_electron/update-v3.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: alpha
          path: HKMM-UI/dist_electron/alpha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

