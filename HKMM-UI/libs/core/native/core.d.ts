// Generated for: core 1.0.0.0
// Generated by: Microsoft.JavaScript.NodeApi.Generator 0.41.0.0
/* eslint-disable */


declare module "core" {

	export function initJSAPI(api: JSAPI): void;

	export function onSettingChanged(): void;

	export class JSAPI extends unknown {
		getConfigPath: () => string;
	}

	export function registerLogHandler(
		level: string,
		handler: (arg1: string) => void,
	): void;

	export function getAPIVersion(apiPath: string): number;

	export function getGameVersion(apiPath: string): string;

	export function tryFindGamePath(): string | undefined;

	export interface TaskPropertyChanged { (
		task: TaskItem,
		propertyName: string | undefined,
	): void; }

	export class TaskLogInfo extends unknown {
		message: string;

		color?: string;
	}

	export class TaskItem extends unknown {
		constructor();

		name: string;

		guid: string;

		progress: number;

		readonly startTime: Date;

		endTime: Date;

		onChanged?: TaskPropertyChanged;

		status: TaskItemStatus;

		readonly isSuccess: boolean;

		readonly isFailed: boolean;

		readonly isRunning: boolean;

		isHidden: boolean;

		readonly logCount: number;

		getLogAt(id: number): TaskLogInfo;

		log(msg: string): void;

		logError(msg: string): void;

		logWarn(msg: string): void;

		print(
			msg: string,
			level: unknown,
		): void;

		getRunningTime(): number;
	}

	export enum TaskItemStatus {
		Idle = 0,

		Running = 1,

		Success = 2,

		Fail = 3,
	}

	export namespace TaskManager {
		export const taskCount: number;

		export function getTaskAt(id: number): TaskItem;

		export function startTask(task: TaskItem): void;

		export function getTask(guid: string): TaskItem | undefined;

		export function getTasksProgress(): number;
	}

	export class HKMMPackage extends unknown {
		constructor();

		static readonly cURRENT_PACKAGE_VERSION: number;

		packageVersion: number;

		info: HKMMHollowKnightPackageDefV1;

		installPath: string;

		readonly version: unknown;

		installDate: Date;

		readonly installDateJS: number;

		installedFiles: unknown[];

		static fromModLegacyToHKMM(mod: LegacyModInfoFull): HKMMHollowKnightPackageDefV1;

		static fromLocalModLegacy(mod: LegacyLocalModInfo): HKMMPackage;
	}

	export class PackageBase extends unknown {
		constructor();

		readonly value: CSHollowKnightPackageDef;

		toHKMMPackageDef(): HKMMHollowKnightPackageDefV1;

		static getJsonTypeInfo(packVersion: number | undefined): unknown;

		static getJsonTypeInfo(json: unknown): unknown;

		getJsonTypeInfo(): unknown;

		static fromJson(json: unknown): CSHollowKnightPackageDef | undefined;

		toJson(): string;

		getAllDependencies(dev: boolean): unknown;
	}

	export class CSHollowKnightPackageDef extends PackageBase {
		constructor();

		additionalAssets: AdditionalAsset[];

		authors: string[];

		dependencies?: References;

		description: string;

		devDependencies?: References;

		name: string;

		releaseAssets?: ReleaseAssets;

		repository: string;
	}

	export class AdditionalAsset extends unknown {
		constructor();

		downloadUrl: string;

		installPath: string;

		installRootDir: InstallationRoot;
	}

	export class ReferenceDef extends unknown {
		constructor();

		alternateInstallName: string;

		fileType?: FileType;

		ref: Reference;
	}

	export class Reference extends unknown {
		constructor();

		asset?: ReleaseAssets;

		tag: string;

		useLatestRelease?: boolean;

		useLatestPublished?: boolean;

		version: string;

		link: string;
	}

	export class PlatformAssets extends unknown {
		constructor();

		linux: string;

		macos: string;

		win32: string;
	}

	export enum InstallationRoot {
		Mods = 0,

		Saves = 1,
	}

	export enum FileType {
		Dll = 0,

		Infer = 1,

		Zip = 2,
	}

	export class ReleaseAssets extends unknown {
		platformAssets?: PlatformAssets;

		string?: string;
	}

	export class ReferenceVersion extends unknown {
		referenceDef?: ReferenceDef;

		string?: string;

		getReferenceDef(): ReferenceDef;
	}

	export class References extends unknown {
		anythingMap: unknown;

		stringArray: string[];
	}

	export enum TypeEnum {
		Mod = 0,

		ModPack = 1,
	}

	export class HKMMHollowKnightPackageDefV1 extends CSHollowKnightPackageDef {
		constructor();

		packageVersion: number;

		version: string;

		type: TypeEnum;

		copyFrom(def: CSHollowKnightPackageDef): void;
	}

	export class LegacyLocalModInfo extends unknown {
		name: string;

		version: string;

		install: number;

		path: string;

		modinfo: LegacyModInfoFull;
	}

	export class LegacyModInfoFull extends unknown {
		name: string;

		version: string;

		desc: string;

		displayName?: string;

		link?: string;

		dependencies: string[];

		integrations: string[];

		repository?: string;

		tags: string[];

		authors: string[];

		date?: string;
	}
}
